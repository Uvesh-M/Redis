name: Deploy Redis to GKE

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to (staging/production)'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

# Default permissions for all jobs
permissions:
  contents: read
  id-token: write

jobs:
  setup:
    uses: ./.github/workflows/install.yml
    with:
      environment: ${{ inputs.environment }}
    secrets: inherit
    
  deploy:
    needs: setup
    runs-on: ubuntu-22.04
    environment: ${{ github.event.inputs.environment }}

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Debug Environment Variables and Secrets
      run: |
        echo "Selected Environment: ${{ github.event.inputs.environment }}"
        echo "PROJECT_ID: ${{ vars.PROJECT_ID }}"
        echo "GKE_CLUSTER: ${{ vars.GKE_CLUSTER }}"
        echo "GKE_ZONE: ${{ vars.GKE_ZONE }}"
        echo "NAMESPACE: ${{ vars.NAMESPACE }}"
        echo "DEPLOYMENT_NAME: ${{ vars.DEPLOYMENT_NAME }}"

    - name: Set up GCP authentication
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}  # Access secret from the selected environment

    - name: Setup Google Cloud CLI
      uses: google-github-actions/setup-gcloud@v2.1.2
      with:
        service_account_key: ${{ secrets.GCP_SA_KEY }}  # Access secret from the selected environment
        project_id: ${{ vars.PROJECT_ID }}  # Access env var from the selected environment

    - name: Install gke-gcloud-auth-plugin
      run: |
        gcloud components install gke-gcloud-auth-plugin
        echo "USE_GKE_GCLOUD_AUTH_PLUGIN=True" >> $GITHUB_ENV

    - name: Get GKE credentials
      run: |
        echo "Running: gcloud container clusters get-credentials ${{ vars.GKE_CLUSTER }} --zone ${{ vars.GKE_ZONE }} --project ${{ vars.PROJECT_ID }}"
        gcloud container clusters get-credentials "${{ vars.GKE_CLUSTER }}" --zone "${{ vars.GKE_ZONE }}" --project "${{ vars.PROJECT_ID }}"

    - name: Verify kubectl configuration
      run: |
        kubectl config view
        kubectl cluster-info

    - name: Create Namespace
      run: |
        kubectl create namespace ${{ vars.NAMESPACE }} --dry-run=client -o yaml | kubectl apply -f -

    - name: Add Bitnami Helm Repository
      run: |
        helm repo add bitnami https://charts.bitnami.com/bitnami
        helm repo update

    - name: Deploy Redis
      run: |
        helm upgrade --install ${{ vars.DEPLOYMENT_NAME }} bitnami/redis \
          --namespace ${{ vars.NAMESPACE }} \
          --values ./redis/values.yaml \
          --set global.environment=${{ github.event.inputs.environment }}

    - name: Verify Deployment
      run: |
        kubectl get pods -n ${{ vars.NAMESPACE }}
        kubectl get svc -n ${{ vars.NAMESPACE }}
