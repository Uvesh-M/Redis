name: Trigger workflow

on:
  workflow_dispatch:
    inputs:
      project_id:
        description: 'Select the Google Cloud Project'
        required: true
        type: string
        default: bo-stage
        options:
          - bo-stage
          - bo-prod
          - bo-dev
      region:
        description: 'Select the Region'
        required: true
        type: string
        default: asia-south1
        options:
          - asia-south1
          - us-central1
          - europe-west1
      artifact_repo:
        description: 'Select the Artifact Repository'
        required: true
        type: string
        default: bo-backend-django
        options:
          - bo-backend-django
          - bo-backend-node
          - bo-backend-go

env:
  IMAGE_NAME: backend-application

jobs:
  deploy:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up GCP authentication
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2.1.2
        with:
          project_id: ${{ inputs.project_id }}

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker ${{ inputs.region }}-docker.pkg.dev

      - name: Trigger Client Workflow
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.TRIGGER_REPO_PAT }}
          script: |
            const response = await github.rest.actions.createWorkflowDispatch({
              owner: 'code-owner-betteropinions',
              repo: 'BetterOpinions-BE-Django',
              workflow_id: 'build_push_gcp.yml',  
              ref: 'fearture/docker-gcp-support', 
              inputs: {
                run_id: '${{ github.run_id }}'
              }
            });
            core.info('Triggered client workflow: build_push_gcp.yml on branch fearture/docker-gcp-support.');

      - name: Wait for Client Workflow Success
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.TRIGGER_REPO_PAT }}
          script: |
            const wait = (ms) => new Promise(resolve => setTimeout(resolve, ms));
            const maxAttempts = 30;  
            const interval = 60 * 1000; 
            let attempts = 0;
            let success = false;

            while (attempts < maxAttempts) {
              const runs = await github.rest.actions.listWorkflowRuns({
                owner: 'code-owner-betteropinions',
                repo: 'BetterOpinions-BE-Django',
                workflow_id: 'build_push_gcp.yml',
                branch: 'fearture/docker-gcp-support',  
                status: 'completed',
                per_page: 5  
              });

              const recentRuns = runs.data.workflow_runs;
              const targetRun = recentRuns.find(run => 
                run.status === 'completed' && 
                new Date(run.created_at) > new Date(Date.now() - 10 * 60 * 1000)
              );

              if (targetRun) {
                if (targetRun.conclusion === 'success') {
                  success = true;
                  core.info(`Client workflow succeeded. Run ID: ${targetRun.id}`);
                  break;
                } else {
                  core.setFailed(`Client workflow completed but failed. Run ID: ${targetRun.id}`);
                  break;
                }
              }

              core.info(`Waiting for client workflow to complete... Attempt ${attempts + 1}`);
              await wait(interval);
              attempts++;
            }

            if (!success) {
              core.setFailed('Client workflow did not complete successfully or timed out.');
            }

