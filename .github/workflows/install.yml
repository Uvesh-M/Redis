name: Install and Setup

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy to (staging/production)"
        required: true
        default: "staging"
        type: choice
        options:
          - staging
          - production
          
  workflow_call:
    inputs:
      environment:
        description: "Environment to deploy to (staging/production)"
        required: true
        type: string

jobs:
  install:
    name: Install and Setup
    runs-on: ubuntu-22.04
    permissions:
      contents: "read"
      id-token: "write"
    environment: ${{ github.event.inputs.environment }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Debug Environment Variables and Secrets
        run: |
          echo "Selected Environment: ${{ github.event.inputs.environment }}"
          echo "PROJECT_ID: ${{ vars.PROJECT_ID }}"
          echo "GKE_CLUSTER: ${{ vars.GKE_CLUSTER }}"
          echo "GKE_ZONE: ${{ vars.GKE_ZONE }}"

      - name: Set up GCP authentication
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup Google Cloud CLI
        uses: google-github-actions/setup-gcloud@v2.1.2
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ vars.PROJECT_ID }}

      - name: Install gke-gcloud-auth-plugin
        run: |
          gcloud components install gke-gcloud-auth-plugin
          echo "USE_GKE_GCLOUD_AUTH_PLUGIN=True" >> $GITHUB_ENV

      - name: Get GKE credentials
        run: |
          gcloud container clusters get-credentials "${{ vars.GKE_CLUSTER }}" --zone "${{ vars.GKE_ZONE }}" --project "${{ vars.PROJECT_ID }}"

      - name: Verify kubectl configuration
        run: |
          kubectl config view
          kubectl cluster-info

      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

      - name: Verify Helm installation
        run: |
          helm version
