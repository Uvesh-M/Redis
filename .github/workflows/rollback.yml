name: Rollback Services

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy to (staging/production)"
        required: true
        default: "staging"
        type: choice
        options:
          - staging
          - production
      service:
        description: "Service to rollback"
        required: true
        type: choice
        options:
          - backend-application
          - backend-migration
          - backend-beat
          - backend-sockets
          - backend-streamer
          - django-env
          - django-ingress
          - django-hpa
          - rabbitmq
          - redis

jobs:
  setup:
    uses: ./.github/workflows/install.yml
    with:
      environment: ${{ inputs.environment }}  # or ${{ vars.ENVIRONMENT }}
    permissions:
      contents: read
      id-token: write
    secrets: inherit

  rollback:
    needs: setup
    runs-on: ubuntu-22.04
    environment: ${{ github.event.inputs.environment }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up GCP authentication
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2.1.2
        with:
          project_id: ${{ vars.PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Configure kubectl
        run: |
          gcloud container clusters get-credentials "${{ vars.GKE_CLUSTER }}" --zone "${{ vars.GKE_ZONE }}" --project "${{ vars.PROJECT_ID }}"

      - name: Install gke-gcloud-auth-plugin
        run: |
          gcloud components install gke-gcloud-auth-plugin

      - name: Get Release History
        id: history
        run: |
          echo "Current release history for ${{ inputs.service }}:"
          helm history ${{ inputs.service }}

          # Get the previous revision number
          LAST_REVISION=$(helm history ${{ inputs.service }} -o json | jq -r '.[] | select(.status == "deployed") | .revision' | sort -rn | head -n 2 | tail -n 1)
          echo "Previous revision number: $LAST_REVISION"
          echo "last_revision=$LAST_REVISION" >> $GITHUB_OUTPUT

      - name: Confirm Rollback
        run: |
          echo "Rolling back ${{ inputs.service }} to revision ${{ steps.history.outputs.last_revision }}"

          if [ -z "${{ steps.history.outputs.last_revision }}" ]; then
            echo "No previous revision found to rollback to"
            exit 1
          fi

      - name: Perform Rollback
        run: |
          helm rollback ${{ inputs.service }} ${{ steps.history.outputs.last_revision }}

      - name: Verify Rollback
        run: |
          echo "Current status of ${{ inputs.service }} after rollback:"
          helm status ${{ inputs.service }}

          # Check pods status
          kubectl get pods | grep ${{ inputs.service }}

          # Wait for rollback to complete
          kubectl rollout status deployment/${{ inputs.service }} || true

      - name: Rollback Status
        run: |
          if helm status ${{ inputs.service }} | grep -q 'STATUS: deployed'; then
            echo "Rollback successful"
          else
            echo "Rollback may have failed - please check service status"
            exit 1
          fi
