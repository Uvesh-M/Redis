name: Deploy RabbitMQ to GKE

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to (staging/production)'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

jobs:
  setup:
    uses: ./.github/workflows/install.yml
    with:
      environment: ${{ inputs.environment }}  # or ${{ vars.ENVIRONMENT }}
    permissions:
      contents: read
      id-token: write
    secrets: inherit

  deploy:
    needs: setup
    name: Deploy
    runs-on: ubuntu-22.04
    permissions:
      contents: 'read'
      id-token: 'write'
    environment: ${{ github.event.inputs.environment }}
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up GCP authentication
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Setup Google Cloud CLI
      uses: google-github-actions/setup-gcloud@v2.1.2
      with:
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        project_id: ${{ vars.PROJECT_ID }}

    - name: Install gke-gcloud-auth-plugin
      run: |
        gcloud components install gke-gcloud-auth-plugin
        echo "USE_GKE_GCLOUD_AUTH_PLUGIN=True" >> $GITHUB_ENV
        
    - name: Get GKE credentials
      run: |
        gcloud container clusters get-credentials "${{ vars.GKE_CLUSTER }}" --zone "${{ vars.GKE_ZONE }}" --project "${{ vars.PROJECT_ID }}"

    - name: Verify kubectl configuration
      run: |
        kubectl config view
        kubectl cluster-info

    - name: Create Namespace
      run: |
        kubectl create namespace default --dry-run=client -o yaml | kubectl apply -f -
        
    - name: Add Bitnami Helm Repository
      run: |
        helm repo add bitnami https://charts.bitnami.com/bitnami
        helm repo update
        
    - name: Check existing RabbitMQ resources
      continue-on-error: true
      run: |
        kubectl get pods -l app.kubernetes.io/name=rabbitmq
        kubectl get services -l app.kubernetes.io/name=rabbitmq
        
    - name: Deploy RabbitMQ
      run: |
        helm upgrade --install rabbitmq bitnami/rabbitmq \
          --namespace default \
          --values ./rabbitMQ/values.yaml \
          --wait \
          --timeout 10m

    - name: Wait for RabbitMQ pod to be ready
      run: |
        echo "Waiting for RabbitMQ pod to be ready..."
        kubectl wait --for=condition=ready pod -l app.kubernetes.io/name=rabbitmq --timeout=300s

    - name: Check Pod Status
      run: |
        kubectl get pods -l app.kubernetes.io/name=rabbitmq -o wide
        kubectl describe pods -l app.kubernetes.io/name=rabbitmq
        kubectl get events --sort-by=.metadata.creationTimestamp

    - name: Check RabbitMQ Logs
      continue-on-error: true
      run: |
        kubectl logs -l app.kubernetes.io/name=rabbitmq --all-containers --tail=100

    - name: Verify deployment
      run: |
        kubectl get pods -l app.kubernetes.io/name=rabbitmq
        kubectl logs $(kubectl get pods -l app.kubernetes.io/name=rabbitmq -o jsonpath="{.items[0].metadata.name}")

    - name: Check RabbitMQ service
      run: |
        kubectl get services | grep rabbitmq
        
    - name: Print RabbitMQ admin credentials
      continue-on-error: true
      run: |
        echo "RabbitMQ admin username: $(kubectl get secret rabbitmq -o jsonpath="{.data.rabbitmq-username}" | base64 --decode)"
        echo "RabbitMQ admin password: $(kubectl get secret rabbitmq -o jsonpath="{.data.rabbitmq-password}" | base64 --decode)"
